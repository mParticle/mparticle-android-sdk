name: "Dependabot Automerge"

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  automerge-dependabot:
    name: "Automerge Dependabot PR"
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.actor == 'dependabot[bot]'
    env:
      GITHUB_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
      GIT_AUTHOR_NAME: mparticle-automation
      GIT_AUTHOR_EMAIL: developers@mparticle.com
      GIT_COMMITTER_NAME: mparticle-automation
      GIT_COMMITTER_EMAIL: developers@mparticle.com
    runs-on: ubuntu-latest
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      - name: 'Automerge PR'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./NR'));
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: issue_number,
              merge_method: 'rebase'
            });