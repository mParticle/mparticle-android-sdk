name: "Build and Test"
on: [push, pull_request]
jobs:
  instrumented-tests:
    name: "Instrumented Tests"
    timeout-minutes: 30
    runs-on: macos-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.head_ref}}
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Run Instrumented Tests"
        uses: reactivecircus/android-emulator-runner@v2.20.0
        with:
          api-level: 29
          script: ./gradlew :android-core:cAT :android-kit-base:cAT --stacktrace
      - name: "Archive Instrumented Tests Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "instrumented-tests-results"
          path: android-core/build/reports/androidTests/connected/**
  unit-tests:
    name: "Unit Tests"
    timeout-minutes: 15
    runs-on: ubuntu-18.04
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.head_ref}}
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Run Unit Tests"
        run: ./gradlew test
      - name: "Print Android Unit Tests Report"
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }}
      - name: "Archive Unit Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "unit-tests-results"
          path: ./**/build/reports/**
  lint-checks:
    name: "Lint Checks"
    timeout-minutes: 15
    runs-on: macos-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.head_ref}}
          submodules: recursive
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Run Android Core SDK Lint"
        run: ./gradlew lint
      - name: "Archive Lint Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "lint-results"
          path: ./**/build/reports/**
  kotlin-lint-checks:
    name: "Kotlin Lint Checks"
    timeout-minutes: 15
    runs-on: macos-latest
    steps:
      - name: "Checkout Branch"
        uses: actions/checkout@v2
        with:
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{github.head_ref}}
          submodules: recursive
      - name: "Install JDK 11"
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: "Run Android Core SDK Kotlin Lint"
        run: ./gradlew ktlintCheck
      - name: "Archive Kotlin Lint Test Results"
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: "kotlin-lint-results"
          path: ./**/build/reports/**
  kit-compatibility-test:
      name: "Kit Compatibility Test"
      runs-on: ubuntu-20.04
      if: github.event_name == 'pull_request'
      steps:
        - name: "Checkout Branch"
          uses: actions/checkout@v2
          with:
            repository: ${{github.event.pull_request.head.repo.full_name}}
            ref: ${{github.head_ref}}
            submodules: recursive
            fetch-depth: 0
        - name: "Install JDK 11"
          uses: actions/setup-java@v2
          with:
            distribution: "zulu"
            java-version: "11"
        - name: "Get Latest Kits"
          run: git submodule foreach "git rebase main"
        - name: "Generate Core Release Build"
          run: ./gradlew -PisRelease=true publishLocal
        - name: "Run Kit-Base Release Tests and Build"
          run: ./gradlew -PisRelease=true :android-kit-base:testRelease
        - name: "Run Kit Release Tests and Build"
          run: ./gradlew -PisRelease=true -p kits testRelease -c ../settings-kits.gradle
  automerge:
      name: "Rebase dependabot PRs"
      runs-on: ubuntu-18.04
      needs: [instrumented-tests, unit-tests, kit-compatibility-test]
      if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
      steps:
          - name: Rebase Dependabot PR
            uses: actions/github-script@v3
            with:
                github-token: ${{secrets.GITHUB_TOKEN}}
                script: |
                    github.pulls.merge({
                        owner: context.repo.owner,
                        repo: context.payload.repository.name,
                        pull_number: context.payload.pull_request.number,
                        merge_method: 'rebase'
                    });
